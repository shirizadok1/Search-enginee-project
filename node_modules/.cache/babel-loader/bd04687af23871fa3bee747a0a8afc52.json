{"ast":null,"code":"import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport React, { useState, useEffect, Suspense, useContext, lazy } from 'react';\nimport { createClient, getDefaultClient } from '@formspree/core';\nimport { loadStripe } from '@stripe/stripe-js';\nimport _typeof from '@babel/runtime/helpers/typeof';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nexport { CardElement } from '@stripe/react-stripe-js';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nvar Elements = /*#__PURE__*/lazy(function () {\n  return import('@stripe/react-stripe-js').then(function (module) {\n    return {\n      \"default\": module.Elements\n    };\n  });\n});\nvar FormspreeContext = /*#__PURE__*/React.createContext({\n  client: undefined\n});\nFormspreeContext.displayName = 'Formspree';\nvar stripePromise;\n\nvar getStripe = function getStripe(stripeKey) {\n  if (!stripePromise) {\n    stripePromise = loadStripe(stripeKey);\n  }\n\n  return stripePromise;\n};\n\nvar handleCreateClient = function handleCreateClient(promise, project) {\n  var config = {};\n\n  if (promise) {\n    config.stripePromise = promise;\n  }\n\n  if (project) {\n    config.project = project;\n  }\n\n  return createClient(config);\n};\n\nvar FormspreeProvider = function FormspreeProvider(props) {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateStripePromise = _useState2[0],\n      setStateStripePromise = _useState2[1];\n\n  var _useState3 = useState(handleCreateClient(stateStripePromise, props.project)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      client = _useState4[0],\n      setClient = _useState4[1];\n\n  useEffect(function () {\n    client.startBrowserSession();\n    return function () {\n      client.teardown();\n    };\n  }, []);\n  useEffect(function () {\n    var getStripePromise = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var promiseStripe;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getStripe(props.stripePK);\n\n              case 2:\n                promiseStripe = _context.sent;\n                setStateStripePromise(promiseStripe);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getStripePromise() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (props.stripePK) {\n      getStripePromise();\n    }\n  }, [props.stripePK]);\n  useEffect(function () {\n    if (stateStripePromise) {\n      setClient(handleCreateClient(stateStripePromise, props.project));\n    }\n  }, [stateStripePromise]);\n  return /*#__PURE__*/React.createElement(FormspreeContext.Provider, {\n    value: {\n      client: client\n    }\n  }, props.stripePK ? /*#__PURE__*/React.createElement(React.Fragment, null, stateStripePromise && /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"p\", null, \"....\")\n  }, /*#__PURE__*/React.createElement(Elements, {\n    stripe: stateStripePromise\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, props.children)))) : /*#__PURE__*/React.createElement(React.Fragment, null, props.children));\n};\n\nfunction useFormspree() {\n  var context = useContext(FormspreeContext);\n  return context.client ? context : {\n    client: getDefaultClient()\n  };\n}\n\nvar version = \"2.3.0\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar isEvent = function isEvent(data) {\n  return data.preventDefault !== undefined;\n};\n\nvar useForm = function useForm(formKey) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitting = _useState2[0],\n      setSubmitting = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      succeeded = _useState4[0],\n      setSucceeded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errors = _useState6[0],\n      setErrors = _useState6[1];\n\n  var formspreeContext = useFormspree();\n  var client = args.client || formspreeContext;\n  var stripe;\n  var elements;\n\n  if (!client) {\n    throw new Error('You must provide a Formspree client');\n  }\n\n  if (!formKey) {\n    throw new Error('You must provide a form key or hashid ' + '(e.g. useForm(\"myForm\") or useForm(\"123xyz\")');\n  }\n\n  if (formspreeContext.client && formspreeContext.client.stripePromise) {\n    stripe = useStripe();\n    elements = useElements();\n  }\n\n  var debug = !!args.debug;\n  var extraData = args.data;\n\n  var reset = function reset() {\n    setSubmitting(false);\n    setSucceeded(false);\n    setErrors([]);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(submissionData) {\n      var getFormData, formData, appendExtraData, prop, extraDataValue, createPaymentMethod;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              getFormData = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n                  var form;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          event.preventDefault();\n                          form = event.target;\n\n                          if (!(form.tagName != 'FORM')) {\n                            _context.next = 4;\n                            break;\n                          }\n\n                          throw new Error('submit was triggered for a non-form element');\n\n                        case 4:\n                          return _context.abrupt(\"return\", new FormData(form));\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function getFormData(_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              if (!isEvent(submissionData)) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 4;\n              return getFormData(submissionData);\n\n            case 4:\n              _context3.t0 = _context3.sent;\n              _context3.next = 8;\n              break;\n\n            case 7:\n              _context3.t0 = submissionData;\n\n            case 8:\n              formData = _context3.t0;\n\n              appendExtraData = function appendExtraData(prop, value) {\n                if (formData instanceof FormData) {\n                  formData.append(prop, value);\n                } else {\n                  formData = Object.assign(formData, _defineProperty({}, prop, value));\n                }\n              }; // Append extra data from config\n\n\n              if (!(_typeof(extraData) === 'object')) {\n                _context3.next = 26;\n                break;\n              }\n\n              _context3.t1 = _regeneratorRuntime.keys(extraData);\n\n            case 12:\n              if ((_context3.t2 = _context3.t1()).done) {\n                _context3.next = 26;\n                break;\n              }\n\n              prop = _context3.t2.value;\n\n              if (!(typeof extraData[prop] === 'function')) {\n                _context3.next = 23;\n                break;\n              }\n\n              extraDataValue = extraData[prop].call(null);\n\n              if (!(extraDataValue instanceof Promise)) {\n                _context3.next = 20;\n                break;\n              }\n\n              _context3.next = 19;\n              return extraDataValue;\n\n            case 19:\n              extraDataValue = _context3.sent;\n\n            case 20:\n              if (extraDataValue !== undefined) {\n                appendExtraData(prop, extraDataValue);\n              }\n\n              _context3.next = 24;\n              break;\n\n            case 23:\n              appendExtraData(prop, extraData[prop]);\n\n            case 24:\n              _context3.next = 12;\n              break;\n\n            case 26:\n              createPaymentMethod = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var address, payload;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          address = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, formData.address_line1 && {\n                            line1: formData.address_line1\n                          }), formData.address_line2 && {\n                            line2: formData.address_line2\n                          }), formData.address_city && {\n                            city: formData.address_city\n                          }), formData.address_country && {\n                            country: formData.address_country\n                          }), formData.address_state && {\n                            state: formData.address_state\n                          }), formData.address_postal_code && {\n                            postal_code: formData.address_postal_code\n                          });\n                          _context2.next = 3;\n                          return stripe.createPaymentMethod({\n                            type: 'card',\n                            card: elements.getElement(CardElement),\n                            billing_details: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, formData.name && {\n                              name: formData.name\n                            }), formData.email && {\n                              email: formData.email\n                            }), formData.phone && {\n                              phone: formData.phone\n                            }), address && {\n                              address: address\n                            })\n                          });\n\n                        case 3:\n                          payload = _context2.sent;\n                          return _context2.abrupt(\"return\", payload);\n\n                        case 5:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function createPaymentMethod() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n\n              setSubmitting(true);\n              return _context3.abrupt(\"return\", formspreeContext.client.submitForm(formKey, formData, {\n                endpoint: args.endpoint,\n                clientName: \"@formspree/react@\".concat(version),\n                createPaymentMethod: formspreeContext.client && formspreeContext.client.stripePromise ? createPaymentMethod : undefined\n              }).then(function (result) {\n                var status = result.response.status;\n                var body;\n\n                if (status === 200) {\n                  if (debug) console.log('Form submitted', result);\n                  setSucceeded(true);\n                  setErrors([]);\n                } else if (status >= 400 && status < 500) {\n                  body = result.body;\n                  if (body.errors) setErrors(body.errors);\n                  if (debug) console.log('Validation error', result);\n                  setSucceeded(false);\n                } else {\n                  if (debug) console.log('Unexpected error', result);\n                  setSucceeded(false);\n                }\n\n                return result;\n              })[\"catch\"](function (error) {\n                if (debug) console.log('Unexpected error', error);\n                setSucceeded(false);\n                throw error;\n              })[\"finally\"](function () {\n                setSubmitting(false);\n              }));\n\n            case 29:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return [{\n    submitting: submitting,\n    succeeded: succeeded,\n    errors: errors\n  }, handleSubmit, reset];\n};\n\nvar _excluded = [\"prefix\", \"field\", \"errors\"];\n\nvar ValidationError = function ValidationError(props) {\n  var prefix = props.prefix,\n      field = props.field,\n      errors = props.errors,\n      attrs = _objectWithoutProperties(props, _excluded);\n\n  var error = (errors || []).find(function (error) {\n    return error.field == field;\n  });\n\n  if (!error) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", attrs, prefix, \" \", error.message);\n};\n\nexport { FormspreeProvider, ValidationError, useForm, useFormspree };","map":null,"metadata":{},"sourceType":"module"}